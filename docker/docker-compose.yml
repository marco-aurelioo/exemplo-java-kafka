version: "3.7"

services:
  redis_cache:
    container_name: "redis"
    image: redis
    ports:
      - 6379:6379
  postgres_database:
    container_name: "pockafka"
    image: postgres:12-alpine
    ports:
      - 5432:5432
    volumes:
     - ./postgres-multi-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES="pockafka","pockafka2"
      - POSTGRES_USER=pockafka
      - POSTGRES_PASSWORD=pockafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/confluentinc"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=32181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=2

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "29092:29092"
    expose:
      - 29092
    volumes:
      - "kafka_data:/confluentinc"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:32181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
      - ADVERTISED_HOST_NAME=localhost
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic car-position --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local